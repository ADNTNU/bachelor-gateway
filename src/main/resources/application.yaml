spring:
  cloud:
    gateway:
      routes:
        - id: rest-route
          uri: ${REST_ROUTE_URI:http://localhost:8082}
          predicates:
            - Path=/rest/**
          filters:
            - StripPrefix=1
        - id: websocket-route
          uri: ${WS_ROUTE_URI:ws://localhost:8086}
          predicates:
            - Path=/ws/data/{entity}
          filters:
            - name: WebSocketSessionAuthFilter
              args: {}
        - id: rest-producer-route
          uri: ${PRODUCER_REST_ROUTE_URI:http://localhost:8083}
          predicates:
            - Path=/restAdm/**
          filters:
            - StripPrefix=1
  application:
    name: bachelor-rest-api
  datasource:
    url: jdbc:mysql://${DB_HOST:localhost}:${DB_PORT:3307}/${DB_NAME:test_db2}?createDatabaseIfNotExist=true
    username: ${DB_USERNAME:root}
    password: ${DB_PASSWORD:root}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: ${DDL:update}
    show-sql: false
    properties:
      hibernate:
        format_sql: true
    database: mysql
    database-platform: org.hibernate.dialect.MySQL8Dialect
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}

server:
  port: ${PORT:8080}

grpc:
  server:
    port: ${GRPC_PORT:9090}
    reflection-service-enabled: true

  client:
    grpc-api:
      address: static://${GRPC_API_HOST:localhost}:${GRPC_API_PORT:9091}
      negotiation-type: plaintext
jwt:
  secret_key: ${JWT_KEY:YouAndIJudasEffectSpineLittleDarkAgesKnockAtMyDoor}

cors:
  allowedOrigins: ${CORS_ORIGINS:http://localhost:3000,http://localhost:3001}

logging:
  level:
    org:
      springframework:
        cloud:
          gateway: DEBUG
    reactor.netty.http.client: DEBUG
    reactor.netty.tcp: DEBUG
    org.springframework.cloud.gateway.filter.NettyRoutingFilter: DEBUG
    io.grpc: DEBUG
    io.grpc.netty.shaded: DEBUG
    no.ntnu.gr10.bachelor_gateway.security.grpc: DEBUG
    no.ntnu.gr10.bachelor_gateway.grpcGateway: DEBUG
